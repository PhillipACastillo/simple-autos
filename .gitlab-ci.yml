#image: openjdk:11
#
#stages:
#  - build
#  - test
#  - coverage
#  - docker
#  - deploy
# # - release
#build:
#  stage: build
#  before_script:
#    - chmod +x ./gradlew
#  script:
#    ./gradlew assemble
#  artifacts:
#    paths:
#      - build/libs/*.jar
#test:
#  stage: test
#  before_script:
#    - chmod +x ./gradlew
#  script:
#    ./gradlew test
#  artifacts:
#    paths:
#      - build/test-results/test/TEST*.xml
#codeCoverage:
#  image: adoptopenjdk:11
#  needs:
#    - build
#    - test
#  stage: coverage
#  before_script:
#    - chmod +x ./gradlew
#  script:
#    - ./gradlew jacocoTestReport
#    - ./gradlew jacocoTestCoverageVerification
#  allow_failure: true
#  artifacts:
#    when: always
#    paths:
#      - build/reports/jacoco/
#docker:
#  image: docker:20
#  needs:
#    - build
#    - test
#  stage: docker
#  services:
#    - docker:dind
#  before_script:
#    - echo "$MY_NAME"
#    - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
#  script:
#    - docker build --pull -t "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID" .
#    - docker push "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID"
#    - docker tag "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID" "$CI_REGISTRY_IMAGE":"latest"
#    - docker push "$CI_REGISTRY_IMAGE":"latest"
#production:
#  stage: deploy
#  services:
#    - docker:dind
#  tags:
#    - docker
#  only:
#    - main
#  script:
#    - docker login --username=_rafaelb24@yahoo.com --password=$HEROKU_API_KEY registry.heroku.com
#    - docker pull "$CI_REGISTRY_IMAGE":"latest"
#    - docker push registry.heroku.com/simple-auto-data/web
#    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app simple-auto-data
###

image: openjdk:11

stages:
  - build
  - test
  - coverage
  - docker
  - deploy

build:
  stage: build
  before_script:
    - chmod +x ./gradlew
  script:
    ./gradlew assemble
  artifacts:
    paths:
      - build/libs/*.jar
test:
  stage: test
  before_script:
    - chmod +x ./gradlew
  script:
    ./gradlew test
  artifacts:
    paths:
      - build/test-results/test/TEST*.xml
codeCoverage:
  image: adoptopenjdk:11
  needs:
    - build
    - test
  stage: coverage
  before_script:
    - chmod +x ./gradlew
  script:
    - ./gradlew jacocoTestReport
    - ./gradlew jacocoTestCoverageVerification
  allow_failure: true
  artifacts:
    when: always
    paths:
      - build/reports/jacoco/
docker:
  image: docker:latest
  needs:
    - build
    - test
  stage: docker
  services:
    - docker:dind
  before_script:
    - echo "$MY_NAME"
    - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID" .
    - docker push "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID"
    - docker tag "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID" "$CI_REGISTRY_IMAGE":"latest"
    - docker push "$CI_REGISTRY_IMAGE":"latest"
deploy:
  stage: deploy
  image: registry.gitlab.com/galv-vmw-apr-2021/capstone/base-aws-eks-image
  before_script:
    - export IMAGE="$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID"
    - aws configure set region us-west-2
    - aws configure set output json
    - aws eks update-kubeconfig --name "$CLUSTER_NAME"
    - aws sts get-caller-identity

  script:
    - envsubst < k8s-deploy.yaml | kubectl apply -f -
    - kubectl apply -f k8s-service.yaml



